# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ...core.serialization import FieldMetadata
from .transaction_search_request_filters_status import TransactionSearchRequestFiltersStatus
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class TransactionSearchRequestFilters(UniversalBaseModel):
    date_from: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="dateFrom")] = None
    date_to: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="dateTo")] = None
    amount_min: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="amountMin")] = None
    amount_max: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="amountMax")] = None
    status: typing.Optional[TransactionSearchRequestFiltersStatus] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
