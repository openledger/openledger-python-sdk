# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .post_v1transactions_approve_response_transaction_transaction import (
    PostV1TransactionsApproveResponseTransactionTransaction,
)


class PostV1TransactionsApproveResponseTransaction(UniversalBaseModel):
    transaction: typing.Optional[PostV1TransactionsApproveResponseTransactionTransaction] = None
    transfer_result: typing_extensions.Annotated[
        typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]], FieldMetadata(alias="transferResult")
    ] = pydantic.Field(default=None)
    """
    Result of the transfer operation
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
