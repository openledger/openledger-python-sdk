# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .transaction_create_request_direction import TransactionCreateRequestDirection


class TransactionCreateRequest(UniversalBaseModel):
    date: typing.Optional[str] = None
    amount: float
    currency: typing.Optional[str] = None
    description: typing.Optional[str] = None
    debit_account_id: typing_extensions.Annotated[str, FieldMetadata(alias="debitAccountId")]
    credit_account_id: typing_extensions.Annotated[str, FieldMetadata(alias="creditAccountId")]
    status: typing.Optional[str] = None
    metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    direction: typing.Optional[TransactionCreateRequestDirection] = None
    counterparty_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="counterpartyName")] = None
    category_id: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
