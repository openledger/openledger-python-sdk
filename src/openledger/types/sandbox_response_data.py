# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .sandbox_response_data_developer import SandboxResponseDataDeveloper
from .sandbox_response_data_entity import SandboxResponseDataEntity
from .sandbox_response_data_ledger import SandboxResponseDataLedger
import typing_extensions
from .sandbox_response_data_plaid_accounts_item import SandboxResponseDataPlaidAccountsItem
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class SandboxResponseData(UniversalBaseModel):
    developer: typing.Optional[SandboxResponseDataDeveloper] = None
    entity: typing.Optional[SandboxResponseDataEntity] = None
    ledger: typing.Optional[SandboxResponseDataLedger] = None
    plaid_accounts: typing_extensions.Annotated[
        typing.Optional[typing.List[SandboxResponseDataPlaidAccountsItem]], FieldMetadata(alias="plaidAccounts")
    ] = None
    token: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
