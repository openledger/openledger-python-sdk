# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import typing_extensions
from ..core.serialization import FieldMetadata
from .semantic_search_response_results_item import SemanticSearchResponseResultsItem
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class SemanticSearchResponse(UniversalBaseModel):
    success: typing.Optional[bool] = None
    query: typing.Optional[str] = None
    entity_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="entityId")] = None
    results: typing.Optional[typing.List[SemanticSearchResponseResultsItem]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
